//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/sqlite"
)

var Gallery = newGalleryTable("", "gallery", "")

type galleryTable struct {
	sqlite.Table

	//Columns
	UUID        sqlite.ColumnString
	LibraryID   sqlite.ColumnInteger
	ArchivePath sqlite.ColumnString
	Title       sqlite.ColumnString
	TitleNative sqlite.ColumnString
	TitleShort  sqlite.ColumnString
	Released    sqlite.ColumnString
	Circle      sqlite.ColumnString
	Artists     sqlite.ColumnString
	Series      sqlite.ColumnString
	Category    sqlite.ColumnString
	Language    sqlite.ColumnString
	Translated  sqlite.ColumnBool
	ImageCount  sqlite.ColumnInteger
	ArchiveSize sqlite.ColumnInteger
	ArchiveHash sqlite.ColumnString
	Thumbnail   sqlite.ColumnString
	Nsfw        sqlite.ColumnBool
	Hidden      sqlite.ColumnBool
	CreatedAt   sqlite.ColumnTimestamp
	UpdatedAt   sqlite.ColumnTimestamp

	AllColumns     sqlite.ColumnList
	MutableColumns sqlite.ColumnList
}

type GalleryTable struct {
	galleryTable

	EXCLUDED galleryTable
}

// AS creates new GalleryTable with assigned alias
func (a GalleryTable) AS(alias string) *GalleryTable {
	return newGalleryTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new GalleryTable with assigned schema name
func (a GalleryTable) FromSchema(schemaName string) *GalleryTable {
	return newGalleryTable(schemaName, a.TableName(), a.Alias())
}

func newGalleryTable(schemaName, tableName, alias string) *GalleryTable {
	return &GalleryTable{
		galleryTable: newGalleryTableImpl(schemaName, tableName, alias),
		EXCLUDED:     newGalleryTableImpl("", "excluded", ""),
	}
}

func newGalleryTableImpl(schemaName, tableName, alias string) galleryTable {
	var (
		UUIDColumn        = sqlite.StringColumn("uuid")
		LibraryIDColumn   = sqlite.IntegerColumn("library_id")
		ArchivePathColumn = sqlite.StringColumn("archive_path")
		TitleColumn       = sqlite.StringColumn("title")
		TitleNativeColumn = sqlite.StringColumn("title_native")
		TitleShortColumn  = sqlite.StringColumn("title_short")
		ReleasedColumn    = sqlite.StringColumn("released")
		CircleColumn      = sqlite.StringColumn("circle")
		ArtistsColumn     = sqlite.StringColumn("artists")
		SeriesColumn      = sqlite.StringColumn("series")
		CategoryColumn    = sqlite.StringColumn("category")
		LanguageColumn    = sqlite.StringColumn("language")
		TranslatedColumn  = sqlite.BoolColumn("translated")
		ImageCountColumn  = sqlite.IntegerColumn("image_count")
		ArchiveSizeColumn = sqlite.IntegerColumn("archive_size")
		ArchiveHashColumn = sqlite.StringColumn("archive_hash")
		ThumbnailColumn   = sqlite.StringColumn("thumbnail")
		NsfwColumn        = sqlite.BoolColumn("nsfw")
		HiddenColumn      = sqlite.BoolColumn("hidden")
		CreatedAtColumn   = sqlite.TimestampColumn("created_at")
		UpdatedAtColumn   = sqlite.TimestampColumn("updated_at")
		allColumns        = sqlite.ColumnList{UUIDColumn, LibraryIDColumn, ArchivePathColumn, TitleColumn, TitleNativeColumn, TitleShortColumn, ReleasedColumn, CircleColumn, ArtistsColumn, SeriesColumn, CategoryColumn, LanguageColumn, TranslatedColumn, ImageCountColumn, ArchiveSizeColumn, ArchiveHashColumn, ThumbnailColumn, NsfwColumn, HiddenColumn, CreatedAtColumn, UpdatedAtColumn}
		mutableColumns    = sqlite.ColumnList{LibraryIDColumn, ArchivePathColumn, TitleColumn, TitleNativeColumn, TitleShortColumn, ReleasedColumn, CircleColumn, ArtistsColumn, SeriesColumn, CategoryColumn, LanguageColumn, TranslatedColumn, ImageCountColumn, ArchiveSizeColumn, ArchiveHashColumn, ThumbnailColumn, NsfwColumn, HiddenColumn, CreatedAtColumn, UpdatedAtColumn}
	)

	return galleryTable{
		Table: sqlite.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		UUID:        UUIDColumn,
		LibraryID:   LibraryIDColumn,
		ArchivePath: ArchivePathColumn,
		Title:       TitleColumn,
		TitleNative: TitleNativeColumn,
		TitleShort:  TitleShortColumn,
		Released:    ReleasedColumn,
		Circle:      CircleColumn,
		Artists:     ArtistsColumn,
		Series:      SeriesColumn,
		Category:    CategoryColumn,
		Language:    LanguageColumn,
		Translated:  TranslatedColumn,
		ImageCount:  ImageCountColumn,
		ArchiveSize: ArchiveSizeColumn,
		ArchiveHash: ArchiveHashColumn,
		Thumbnail:   ThumbnailColumn,
		Nsfw:        NsfwColumn,
		Hidden:      HiddenColumn,
		CreatedAt:   CreatedAtColumn,
		UpdatedAt:   UpdatedAtColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
	}
}
