//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/sqlite"
)

var GalleryPref = newGalleryPrefTable("", "gallery_pref", "")

type galleryPrefTable struct {
	sqlite.Table

	//Columns
	UserUUID      sqlite.ColumnString
	GalleryUUID   sqlite.ColumnString
	Progress      sqlite.ColumnInteger
	FavoriteGroup sqlite.ColumnString
	UpdatedAt     sqlite.ColumnTimestamp

	AllColumns     sqlite.ColumnList
	MutableColumns sqlite.ColumnList
}

type GalleryPrefTable struct {
	galleryPrefTable

	EXCLUDED galleryPrefTable
}

// AS creates new GalleryPrefTable with assigned alias
func (a GalleryPrefTable) AS(alias string) *GalleryPrefTable {
	return newGalleryPrefTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new GalleryPrefTable with assigned schema name
func (a GalleryPrefTable) FromSchema(schemaName string) *GalleryPrefTable {
	return newGalleryPrefTable(schemaName, a.TableName(), a.Alias())
}

func newGalleryPrefTable(schemaName, tableName, alias string) *GalleryPrefTable {
	return &GalleryPrefTable{
		galleryPrefTable: newGalleryPrefTableImpl(schemaName, tableName, alias),
		EXCLUDED:         newGalleryPrefTableImpl("", "excluded", ""),
	}
}

func newGalleryPrefTableImpl(schemaName, tableName, alias string) galleryPrefTable {
	var (
		UserUUIDColumn      = sqlite.StringColumn("user_uuid")
		GalleryUUIDColumn   = sqlite.StringColumn("gallery_uuid")
		ProgressColumn      = sqlite.IntegerColumn("progress")
		FavoriteGroupColumn = sqlite.StringColumn("favorite_group")
		UpdatedAtColumn     = sqlite.TimestampColumn("updated_at")
		allColumns          = sqlite.ColumnList{UserUUIDColumn, GalleryUUIDColumn, ProgressColumn, FavoriteGroupColumn, UpdatedAtColumn}
		mutableColumns      = sqlite.ColumnList{ProgressColumn, FavoriteGroupColumn, UpdatedAtColumn}
	)

	return galleryPrefTable{
		Table: sqlite.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		UserUUID:      UserUUIDColumn,
		GalleryUUID:   GalleryUUIDColumn,
		Progress:      ProgressColumn,
		FavoriteGroup: FavoriteGroupColumn,
		UpdatedAt:     UpdatedAtColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
	}
}
