//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/sqlite"
)

var GalleryTag = newGalleryTagTable("", "gallery_tag", "")

type galleryTagTable struct {
	sqlite.Table

	//Columns
	GalleryUUID sqlite.ColumnString
	TagID       sqlite.ColumnInteger

	AllColumns     sqlite.ColumnList
	MutableColumns sqlite.ColumnList
}

type GalleryTagTable struct {
	galleryTagTable

	EXCLUDED galleryTagTable
}

// AS creates new GalleryTagTable with assigned alias
func (a GalleryTagTable) AS(alias string) *GalleryTagTable {
	return newGalleryTagTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new GalleryTagTable with assigned schema name
func (a GalleryTagTable) FromSchema(schemaName string) *GalleryTagTable {
	return newGalleryTagTable(schemaName, a.TableName(), a.Alias())
}

func newGalleryTagTable(schemaName, tableName, alias string) *GalleryTagTable {
	return &GalleryTagTable{
		galleryTagTable: newGalleryTagTableImpl(schemaName, tableName, alias),
		EXCLUDED:        newGalleryTagTableImpl("", "excluded", ""),
	}
}

func newGalleryTagTableImpl(schemaName, tableName, alias string) galleryTagTable {
	var (
		GalleryUUIDColumn = sqlite.StringColumn("gallery_uuid")
		TagIDColumn       = sqlite.IntegerColumn("tag_id")
		allColumns        = sqlite.ColumnList{GalleryUUIDColumn, TagIDColumn}
		mutableColumns    = sqlite.ColumnList{GalleryUUIDColumn, TagIDColumn}
	)

	return galleryTagTable{
		Table: sqlite.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		GalleryUUID: GalleryUUIDColumn,
		TagID:       TagIDColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
	}
}
